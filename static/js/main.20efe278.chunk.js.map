{"version":3,"sources":["logo.svg","SortingGraph/SortingAlgo/BubbleSort.js","SortingGraph/SortingAlgo/HeapSort.js","SortingGraph/SortingAlgo/QuickSort.js","SortingGraph/SortingAlgo/MergeSort.js","SortingGraph/SortingGraph.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","bubbleSort","list","speed","array","slice","numSwaps","i","j","animations","barsTotal","document","getElementsByClassName","length","swap","push","bar1","bar2","bar1Value","bar2Value","bar1Style","style","bar2Style","setTimeout","height","backgroundColor","temp","heapSort","root","heap","forEach","heapAdd","heapDelete","console","log","Heapify","sizeOfArray","largest","left","right","value","idx","arr","maxHeapify","parent","Math","floor","node","quickSort","sort","low","high","pi","pivot","partition","mergeSort","l","r","m","k","n1","n2","L","R","merge","SortingGraph","props","handleChange","event","newValue","setState","arrayLength","addValues","buttonT","width","state","originArray","swaps","Algo","sizeCount","Bsort","bind","Hsort","Qsort","Msort","updateArray","setAlgo","this","random","algo","bubbleB","heapB","quickB","mergeB","getElementsByTagName","name","className","sortArrayB","disabled","map","index","key","onClick","sortArray","Box","display","p","Typography","id","Slider","valueLabelDisplay","step","onChangeCommitted","defaultValue","min","max","aria-labelledby","updateScreen","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.20efe278.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function bubbleSort(list,speed){\r\n  var array = list.slice();\r\n  numSwaps = 0;\r\n  const animations = [];\r\n  const barsTotal = document.getElementsByClassName('array-node');\r\n  var i,j;\r\n  for (i = 0;i < array.length-1;i++){\r\n    for (j = 0;j < array.length-1;j++){\r\n        if(array[j] > array[j+1]){\r\n          \r\n          swap(array,j,j+1);\r\n          animations.push([ j , j+1 ,array[j],array[j+1]]);\r\n        }\r\n    }\r\n  }\r\n  var x = array.length-1;\r\n  for(i = 0; i < animations.length;i++){\r\n      const [bar1,bar2,bar1Value,bar2Value] = animations[i];\r\n      const bar1Style = barsTotal[bar1].style;\r\n      const bar2Style = barsTotal[bar2].style;\r\n      \r\n      setTimeout(() => {\r\n          \r\n          setTimeout(() => {   \r\n              bar1Style.height = bar1Value + 'px' ;\r\n              bar2Style.height = bar2Value + 'px' ; \r\n  \r\n              bar1Style.backgroundColor = '#0052f5';\r\n              bar2Style.backgroundColor = '#0052f5';\r\n             \r\n          },  1)\r\n          bar1Style.backgroundColor = 'red';\r\n      \r\n\r\n      }, 0.3 * i * speed)    \r\n  }\r\n  return array;\r\n}\r\nvar numSwaps = 0;\r\nfunction swap(array,i,j){\r\n  numSwaps++;\r\n  var temp = array[j];\r\n  array[j] = array[i];\r\n  array[i] = temp;\r\n}\r\nexport function getSwapsB()\r\n{\r\n  return numSwaps;\r\n  \r\n}\r\n","export function heapSort (list,speed){\r\n    var array =list.slice();\r\n    numSwaps= 0;\r\n    root = 0;\r\n    animations = [];\r\n    heap = [];\r\n    array.forEach(heapAdd);\r\n    var i;\r\n    var arr = [];\r\n    for(i = 0 ; i < heap.length; i++){\r\n      heapDelete();\r\n    \r\n    }\r\n    for(i = 0; i < animations.length;i++){\r\n      const [bar1,bar2,bar1Value,bar2Value] = animations[i];\r\n      const bar1Style = barsTotal[bar1].style;\r\n      const bar2Style = barsTotal[bar2].style;\r\n      \r\n      setTimeout(() => {\r\n          \r\n  \r\n        setTimeout(() => {   \r\n          bar1Style.height = bar1Value + 'px' ;\r\n          bar2Style.height = bar2Value + 'px' ; \r\n\r\n          bar1Style.backgroundColor = '#0052f5';\r\n          bar2Style.backgroundColor = '#0052f5';\r\n         \r\n      },  1)\r\n      bar1Style.backgroundColor = 'red';\r\n      \r\n\r\n      }, i * speed)   \r\n      \r\n  }\r\n    console.log(animations.length)\r\n      return heap;\r\n    \r\n}\r\nconst barsTotal = document.getElementsByClassName('array-node');\r\nvar root = 0;\r\nvar numSwaps= 0;\r\nvar heap = [];\r\nvar animations = [];\r\n\r\nfunction swap(i,j){\r\n    numSwaps++;\r\n    var temp = heap[j];\r\n    heap[j] = heap[i];\r\n    heap[i] = temp;\r\n    animations.push([i,j,heap[i],heap[j]]);\r\n  \r\n  }\r\n  function heapDelete()\r\n{\r\n    swap(0,--root);\r\n    Heapify(root,0);\r\n    \r\n}\r\nfunction heapAdd(value,idx,arr)\r\n{\r\n    heap[root] = (value);\r\n    \r\n    root++;\r\n    if(root != 1){\r\n    maxHeapify(root, root-1);\r\n}\r\n}\r\n\r\n  function maxHeapify(sizeOfArray,i)\r\n{\r\n  var parent = Math.floor((i-1)/2);\r\n  var node  = i;\r\n \r\n  \r\n  if((parent < sizeOfArray) && (heap[node] > heap[parent]) ){\r\n   \r\n    swap(parent,node);\r\n    node = parent;\r\n    \r\n    maxHeapify(sizeOfArray, node);\r\n  }\r\n  \r\n}\r\n\r\nexport function getSwapsH()\r\n{\r\n  return numSwaps;\r\n  \r\n}\r\n\r\nfunction Heapify(sizeOfArray,i)\r\n{\r\n    var largest = i;\r\n \r\n    var left = 2*i + 1;\r\n    var right = 2*i + 2;\r\n    \r\n  if((left < sizeOfArray) && (heap[left] > heap[largest]) )\r\n    largest = left;\r\n\r\n  if((right < sizeOfArray) && (heap[right] > heap[largest]))\r\n    largest = right;\r\n\r\n  if (largest != i){\r\n    swap(i,largest);\r\n    Heapify(sizeOfArray,largest);\r\n  }\r\n  \r\n}","export function quickSort (list,speed){\r\n    arr = list.slice();\r\n    animations = [];\r\n    numSwaps = 0;\r\n    sort(0,arr.length-1);\r\n    \r\n    var i;\r\n    \r\n    for(i = 0; i < animations.length;i++){\r\n        const [bar1,bar2,bar1Value,bar2Value] = animations[i];\r\n        const bar1Style = barsTotal[bar1].style;\r\n        const bar2Style = barsTotal[bar2].style;\r\n       \r\n        setTimeout(() => {\r\n            \r\n    \r\n          setTimeout(() => {   \r\n            bar1Style.height = bar1Value + 'px' ;\r\n            bar2Style.height = bar2Value + 'px' ; \r\n  \r\n            bar1Style.backgroundColor = '#0052f5';\r\n            bar2Style.backgroundColor = '#0052f5';\r\n           \r\n        },  1)\r\n        bar1Style.backgroundColor = 'red';\r\n        \r\n  \r\n        }, i * speed)   \r\n        \r\n    }\r\n    return arr;\r\n}\r\nvar arr = [];\r\nvar animations = [];\r\nvar numSwaps = 0;\r\nconst barsTotal = document.getElementsByClassName('array-node');\r\nfunction sort(low,high){\r\n    \r\n    if(low < high){\r\n        var pi = partition(low,high);\r\n        sort(low,pi-1);\r\n        sort(pi+1,high);\r\n        \r\n    }\r\n\r\n}\r\n\r\nfunction partition (low, high)\r\n{\r\n    var pivot = arr[high];  \r\n \r\n    var i = (low - 1)  \r\n    var j;\r\n    for (j = low; j <= high - 1; j++)\r\n    {\r\n       \r\n        if (arr[j] < pivot)\r\n        {\r\n            i++;    \r\n            swap(i, j);\r\n        }\r\n    }\r\n    swap(i+1,high);\r\n    return (i + 1);\r\n}\r\n\r\nfunction swap(i,j){\r\n    numSwaps++;\r\n    var temp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = temp;\r\n    animations.push([i,j,arr[i],arr[j]]);\r\n}\r\n\r\nexport function getSwapsQ(){\r\n    return numSwaps;\r\n\r\n}\r\n","export function mergeSort (list,speed){\r\n    arr = list.slice();\r\n    animations = [];\r\n    \r\n    var i;\r\n    \r\n    const barsTotal = document.getElementsByClassName('array-node');\r\n    sort(0, arr.length-1);\r\n    console.log(arr);\r\n\r\n    for(i = 0; i < animations.length;i++){\r\n        const [bar1,bar2,bar1Value,bar2Value] = animations[i];\r\n        const bar1Style = barsTotal[bar1].style;\r\n        const bar2Style = barsTotal[bar2].style;\r\n        \r\n        setTimeout(() => {\r\n            \r\n            setTimeout(() => {   \r\n                bar1Style.height = bar1Value + 'px' ;\r\n                bar2Style.height = bar2Value + 'px' ; \r\n    \r\n                bar1Style.backgroundColor = '#0052f5';\r\n                bar2Style.backgroundColor = '#0052f5';\r\n               \r\n            },  1)\r\n           bar1Style.backgroundColor = 'red';\r\n        \r\n  \r\n        }, i * speed)    \r\n    }\r\n    return arr;\r\n}\r\nvar arr = [];\r\nvar animations = [];\r\nfunction  merge(l, m, r) \r\n{ \r\n    var i, j, k; \r\n    var n1 = m - l + 1; \r\n    var n2 =  r - m; \r\n  \r\n    /* create temp arrays */\r\n    var L = [];\r\n    var R = []; \r\n  \r\n    /* Copy data to temp arrays L[] and R[] */\r\n    for (i = 0; i < n1; i++){\r\n        \r\n        L[i] = arr[l + i]; \r\n    } \r\n    for (j = 0; j < n2; j++){ \r\n        R[j] = arr[m + 1+ j]; \r\n    }\r\n    /* Merge the temp arrays back into arr[l..r]*/\r\n    i = 0; // Initial index of first subarray \r\n    j = 0; // Initial index of second subarray \r\n    k = l; // Initial index of merged subarray \r\n    while (i < n1 && j < n2) \r\n    { \r\n        \r\n      \r\n        if (L[i] <= R[j]) \r\n        { \r\n            \r\n            arr[k] = L[i]; \r\n            animations.push([k,i,arr[k],arr[i]]);\r\n            /*animations.push([k,i,arr[k],L[i]]);*/\r\n            i++; \r\n        } \r\n        else\r\n        { \r\n            arr[k] = R[j]; \r\n           /* animations.push([k,j,arr[k],R[j]]);*/\r\n           animations.push([k,j,arr[k],arr[j]]);\r\n            j++; \r\n        } \r\n        k++; \r\n        \r\n       \r\n    } \r\n  \r\n    /* Copy the remaining elements of L[], if there \r\n       are any */\r\n    while (i < n1) \r\n    { \r\n        arr[k] = L[i]; \r\n        /*animations.push([k,i,arr[k],L[i]]);*/\r\n        animations.push([k,i,arr[k],arr[i]]);\r\n        i++; \r\n        k++; \r\n    } \r\n  \r\n    /* Copy the remaining elements of R[], if there \r\n       are any */\r\n    while (j < n2) \r\n    { \r\n        arr[k] = R[j]; \r\n        animations.push([k,j,arr[k],arr[j]]);\r\n        /*animations.push([k,j,arr[k],R[j]]);*/\r\n        j++; \r\n        k++; \r\n    } \r\n} \r\n\r\n/* l is for left index and r is right index of the \r\n   sub-array of arr to be sorted */\r\nfunction sort(l, r) \r\n{ \r\n\r\n    if (l < r) \r\n    { \r\n        // Same as (l+r)/2, but avoids overflow for \r\n        // large l and h \r\n        var m = l+ Math.floor((r-l)/2); \r\n  \r\n        // Sort first and second halves \r\n        sort( l, m); \r\n        sort( m+1, r); \r\n  \r\n        merge(l, m, r); \r\n    } \r\n} \r\nexport function getSwapsM(){\r\n    return 0;\r\n\r\n}","import './SortingGraph.css'\r\nimport {bubbleSort, getSwapsB} from './SortingAlgo/BubbleSort.js'\r\nimport {heapSort, getSwapsH} from './SortingAlgo/HeapSort.js'\r\nimport {quickSort,getSwapsQ} from './SortingAlgo/QuickSort.js'\r\nimport {mergeSort,getSwapsM} from './SortingAlgo/MergeSort.js'\r\nimport React from 'react';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { positions } from '@material-ui/system';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport { sizing } from '@material-ui/system';\r\nexport default class SortingGraph extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            array: [],\r\n            originArray: [],\r\n            swaps:0,\r\n            arrayLength: 100,\r\n            Algo: \"Q\",\r\n            sizeCount:0,\r\n            speed:3,\r\n        \r\n        };\r\n        this.Bsort = this.Bsort.bind(this);\r\n        this.Hsort = this.Hsort.bind(this);\r\n        this.Qsort = this.Qsort.bind(this);\r\n        this.Msort = this.Msort.bind(this);\r\n        this.updateArray = this.updateArray.bind(this);\r\n        this.setAlgo = this.setAlgo.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.addValues();\r\n    }\r\n \r\n    addValues(){\r\n        const array = [];\r\n        for(let i = 0; i < this.state.arrayLength;i++){\r\n            array[i] = Math.floor(Math.random() * 850);\r\n            \r\n        }\r\n        this.setState({\r\n            array: array,\r\n            originArray: array,\r\n        });        \r\n    }\r\n    setAlgo(algo){\r\n        this.setState({\r\n            Algo: algo,\r\n        });    \r\n        var bubbleB,heapB,quickB,mergeB,i; \r\n        const buttonT = document.getElementsByTagName(\"Button\");\r\n      \r\n       \r\n        for(i = 0; i < buttonT.length; i++){\r\n            \r\n            if(buttonT[i].name == \"B\"){\r\n                bubbleB = buttonT[i];\r\n            }else if(buttonT[i].name == \"H\"){\r\n                heapB = buttonT[i];\r\n            }else if(buttonT[i].name == \"Q\"){\r\n                quickB = buttonT[i];\r\n            }else if(buttonT[i].name == \"M\"){\r\n                mergeB = buttonT[i];\r\n            }\r\n        }\r\n       \r\n        bubbleB.className = \"sort-button\";\r\n        heapB.className = \"sort-button\";\r\n        quickB.className = \"sort-button\";\r\n        mergeB.className = \"sort-button\";\r\n        if(algo == \"B\"){\r\n            bubbleB.className = \"algo-button\";\r\n            \r\n        }else if(algo == \"Q\"){\r\n            quickB.className = \"algo-button\";\r\n        }else if(algo == \"M\"){\r\n            mergeB.className = \"algo-button\";\r\n        }else if(algo == \"H\"){\r\n            heapB.className = \"algo-button\";\r\n        }\r\n\r\n    }\r\n  \r\n    sortArray(){\r\n        \r\n\r\n        if(this.state.Algo == \"B\"){\r\n            this.Bsort();\r\n        }else if(this.state.Algo == \"Q\"){\r\n            this.Qsort();\r\n        }else if(this.state.Algo == \"M\"){\r\n            this.Msort();\r\n        }else if(this.state.Algo == \"H\"){\r\n            this.Hsort();\r\n        }\r\n\r\n        var sortArrayB,i; \r\n        const buttonT = document.getElementsByTagName(\"Button\");\r\n      \r\n       \r\n        for(i = 0; i < buttonT.length; i++){\r\n            \r\n            if(buttonT[i].name == \"A\"){\r\n                sortArrayB = buttonT[i];\r\n                \r\n            }\r\n        }\r\n        sortArrayB.disabled = true;\r\n        console.log(sortArrayB);\r\n        setTimeout(() => {   \r\n            sortArrayB.disabled = false;\r\n           \r\n        },  2000)\r\n    }\r\n\r\n    Bsort(){\r\n        \r\n        this.setState({\r\n                array: bubbleSort(this.state.array,this.state.speed),\r\n                swaps: getSwapsB(),\r\n            });\r\n         \r\n    }\r\n    Hsort(){\r\n       \r\n        this.setState({\r\n            array: heapSort(this.state.array,this.state.speed),\r\n            swaps: getSwapsH(),\r\n        });\r\n        \r\n    }\r\n    Qsort(){\r\n        \r\n        this.setState({\r\n            array: quickSort(this.state.array,this.state.speed),\r\n            swaps: getSwapsQ(),\r\n        });\r\n        \r\n    }\r\n    Msort(){\r\n     \r\n        this.setState({\r\n            array:  mergeSort(this.state.array,this.state.speed),\r\n            swaps: getSwapsM(),\r\n        });\r\n       \r\n    }\r\n    updateArray(){\r\n        const array = this.state.array.slice();\r\n        const barsTotal = document.getElementsByClassName('array-node');\r\n       \r\n        for(let i = 0; i < this.state.arrayLength;i++){\r\n            const bar1Style = barsTotal[i].style;\r\n        }\r\n  \r\n    }  \r\n    changeSize(){\r\n        this.state.sizeCount++;\r\n        if(this.state.sizeCount == 0){\r\n            this.state.arrayLength = 50;\r\n        }else if(this.state.sizeCount == 1){\r\n            this.state.arrayLength = 100;\r\n        }else if(this.state.sizeCount == 2){\r\n            this.state.sizeCount = 0;\r\n            this.state.arrayLength = 300;\r\n        }\r\n        this.setState();\r\n        \r\n    } \r\n     handleChange = (event, newValue) => {\r\n        this.setState({\r\n            arrayLength: newValue,\r\n        });\r\n        this.addValues();\r\n        var buttonT = document.getElementsByClassName(\"array-node\");\r\n       \r\n        if(newValue <= 30){ \r\n            for(let i = 0; i < buttonT.length;i++){\r\n                buttonT[i].style.width = 30 + \"px\";\r\n                this.setState({\r\n                    speed: 300,\r\n                });\r\n            }\r\n\r\n        }else if(newValue > 30 && newValue <= 100){\r\n            for(let i = 0; i < buttonT.length;i++){\r\n                buttonT[i].style.width = 5 + \"px\";\r\n               \r\n            }\r\n            this.setState({\r\n                speed: 30,\r\n            });\r\n        }else if(newValue > 100){\r\n            for(let i = 0; i < buttonT.length;i++){\r\n                buttonT[i].style.width = 3 + \"px\";\r\n               \r\n            }\r\n            this.setState({\r\n                speed: 3,\r\n            });\r\n        }\r\n        \r\n        \r\n      };\r\n\r\n    updateScreen(){\r\n    \r\n    return (this.state.originArray.map((value,index) => (\r\n        <div className = \"array-node\" key = {index}  style={{height: value +\"px\"}}>\r\n        \r\n        </div>\r\n        )));           \r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div >\r\n                <div className = \"button-container\">\r\n                    <h1 className = \"title\">Sorting Algorithm Visualization</h1>\r\n                    <div className = \"divider\">|</div>\r\n                    <button className = \"sort-button\" onClick={() => this.addValues()}>Generate List</button>\r\n                    <div className = \"divider2\">|</div>\r\n                    <button name = \"B\" className = \"sort-button\" onClick={() => this.setAlgo(\"B\")}>BubbleSort</button>\r\n                    <button name = \"H\" className = \"sort-button\" onClick={() => this.setAlgo(\"H\")} >HeapSort</button>\r\n                    <button name = \"Q\" className = \"sort-button\" onClick={() => this.setAlgo(\"Q\")} >QuickSort</button>\r\n                    <button name = \"M\" className = \"sort-button\" onClick={() => this.setAlgo(\"M\")} >MergeSort</button>\r\n                    <div className = \"divider2\">|</div>\r\n                    <button name = \"A\" className = \"sort-button\" onClick={() => this.sortArray()}  >Sort Array</button>\r\n                    <div className = \"divider2\">|</div>\r\n                        <Box display = \"inline-block\" width={300} p={1}> \r\n                            <Typography id=\"continuous-slider\" >Size: </Typography>\r\n                            <Slider valueLabelDisplay=\"auto\" step = {1} onChangeCommitted={this.handleChange} defaultValue={100} min = {5} max = {200}  aria-labelledby=\"continuous-slider\"/>\r\n                        </Box>\r\n                     \r\n                    </div>\r\n               \r\n                <div className = \"array-container\">\r\n                    {this.updateScreen()}\r\n                </div>\r\n        </div>\r\n        ); \r\n    };\r\n}\r\n\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SortingGraph from './SortingGraph/SortingGraph'\n\n\nclass App extends React.Component{\n  render(){\n    return (\n      <div className=\"App\">\n        <SortingGraph className= \"App-header\"></SortingGraph>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}